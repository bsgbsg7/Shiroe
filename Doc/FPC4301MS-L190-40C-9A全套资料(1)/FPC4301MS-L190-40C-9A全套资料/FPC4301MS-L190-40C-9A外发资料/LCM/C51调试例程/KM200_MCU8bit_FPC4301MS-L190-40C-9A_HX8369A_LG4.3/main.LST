C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "c8051F340.h"
   2          #include <intrins.h>
   3          #include <absacc.h>
   4          #include <stdlib.h>
   5          #include <main.h>
   6          #include <lcd\lcd.h>
   7          #include <POWER.h>
   8          #include "oledfont.h"   
   9          
  10            unsigned char vcom;
  11            unsigned char POWER_VOL=1,PCH=10,at_jump=1; 
  12          /********************************************************************************/
  13          void main(void)
  14          { 
  15   1        
  16   1      
  17   1          unsigned char key;
  18   1          MCU_Init();
  19   1          OLED_Init();//初始化OLED  
  20   1          OLED_Clear(); 
  21   1          Disp_Pro_Name();
  22   1      
  23   1        while(1)
  24   1            {
  25   2                  key=KEY_Scan();
  26   2      
  27   2                  if(key==KEY2_PRES)
  28   2                      { 
  29   3                        FM_short();
  30   3                        if(PCH==10) PCH=18;                 
  31   3                        PCH--;
  32   3                        lcd_show(PCH);
  33   3                        at_jump=0;    
  34   3      
  35   3                      }
  36   2      
  37   2                  if(key==KEY3_PRES)
  38   2                      { 
  39   3                            if( vcom_adj==1)
  40   3                            {               
  41   4                                  FM_short();   
  42   4                                  vcom+=vcom_Step;
  43   4                                  VCOM_ADJ_();  
  44   4                            }
  45   3                            
  46   3                                if( vcom_adj==0)  
  47   3                                {                 
  48   4                                    FM_short();
  49   4                                    PCH++;                
  50   4                                    if(PCH==18) PCH=10; 
  51   4                                    lcd_show(PCH);
  52   4                                    at_jump=0;
  53   4                                }
  54   3                            
  55   3                      }
C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 2   

  56   2                      
  57   2                  if(key==KEY1_PRES)
  58   2                      {
  59   3                            switch(POWER_VOL)
  60   3                            {
  61   4                              case 0: Power_off(); break;
  62   4                              case 1: Power_on(); at_jump=1;  break;                        
  63   4                              default: break;
  64   4                          }
  65   3      
  66   3                        }
  67   2                      
  68   2                                if(POWER_VOL==0&&at_jump==1&&AUTO_PIC)    
  69   2                            {
  70   3                                
  71   3                                  lcd_show(PCH);  
  72   3                              
  73   3                              
  74   3                              
  75   3                            #ifdef READ_REG
  76   3                                  Disp_ID_Lcd();
  77   3                              #endif
  78   3                              
  79   3                              
  80   3                              
  81   3                                  PCH++;
  82   3                                  TEST_IMG();
  83   3                                  if(PCH==18) PCH=10;
  84   3                            }
  85   2      
  86   2            }   
  87   1      }
  88          
  89          //----------------------------------------------------------------------
  90          void Delay(unsigned int dly)
  91          {
  92   1          unsigned int i,j,k;
  93   1        
  94   1          for(i=0;i<dly;i++)
  95   1        {
  96   2        for(k=0;k<5;k++)
  97   2            for(j=0;j<959;j++);
  98   2        }
  99   1      }
 100          
 101          
 102          void  MCU_Init(void)
 103          {
 104   1          unsigned char n;
 105   1        PCA0MD &= ~0x40;
 106   1      
 107   1            //OSC
 108   1            OSCICN = 0x83;    //Internal oscillator enabled, SYSCLK = Internal Oscillator = 12MHz
 109   1            CLKMUL = 0x00;    //Select internal oscillator as clock multiplier source clock
 110   1      
 111   1            CLKMUL |= 0x80;   //Enable clock multiplier
 112   1      
 113   1            for(n=0;n<255;n++);
 114   1      
 115   1            CLKMUL |= 0xC0;           //Initialize the clock multiplier
 116   1            while(!(CLKMUL & 0x20));  //Wait for multiplier to lock
 117   1            CLKSEL = 0x00;            //Change SYSCLK to (4x Multiplier    ) = 48MHz  (48MHz is as fast as F34 will
C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 3   

             - run); 0x03;
 118   1            RSTSRC   |= 0x02;  
 119   1      
 120   1        
 121   1        FLSCL = FLSCL | 0x90;
 122   1      CLKSEL = CLKSEL | 0x03;
 123   1      OSCICN = OSCICN | 0x03;
 124   1      
 125   1      //  P0~P4          //set high impedance , skipped by crossbar
 126   1      //  P0MDIN |= 0xFF;          //数字输入(无模拟输入）
 127   1      //  P0MDOUT = 0x00;    P0 |= 0XFF;      //P0口 置1  
 128   1      //  P1MDOUT = 0x00;    P1 |= 0XFF;      //P0口 置1  
 129   1      
 130   1      
 131   1        P0MDOUT |= 0xFF;  
 132   1        P1MDOUT |= 0xFF;  
 133   1        P2MDOUT |= 0xFF;
 134   1        P3MDOUT |= 0xFF;  
 135   1      //  P4MDIN  |= 0xFF;    //数字输入(无模拟输入）
 136   1        
 137   1        
 138   1        P4MDOUT = 0x00;  //Set Input Mode Before Read 
 139   1        P4MDIN  |= 0xFF; 
 140   1        
 141   1        
 142   1      
 143   1        
 144   1      
 145   1         
 146   1      //    XBR0     |= 0x02; 
 147   1            XBR1     |= 0x40;       // Enable Crossbar
 148   1            
 149   1        IOVCC_EN = 0;
 150   1          VCI_EN = 0;
 151   1           BL_EN = 0;
 152   1          MTP_EN = 0;             
 153   1      FM_Long();
 154   1      
 155   1      #ifdef SPI_4W
                XBR0     |= 0x02; 
                XBR1     |= 0x40;       // Enable Crossbar
                CLKSEL = 0x03;
                SPI0CFG   = 0x70;
                SPI0CN    = 0x0f;
                //SPI0CKR   = (48000000/(2*400000)) - 1;  
                SPI0CKR=0x00;
              #endif  
 164   1      Power_off();
 165   1      }
 166          
 167          
 168          
 169          void FM_short(void)
 170          {
 171   1            FMQ=1;
 172   1            Delay(10);  
 173   1            FMQ=0;  
 174   1      }
 175          
 176          void FM_Long(void)
 177          {
 178   1            FMQ=1;
C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 4   

 179   1            Delay(200); 
 180   1            FMQ=0;  
 181   1      }
 182          
 183          unsigned char KEY_Scan(void)
 184          {  
 185   1        unsigned char KEY_NUM;  
 186   1        static u8 key_up=1;//按键按松开标志
 187   1            KEY_NUM=P4;
 188   1        if((!((KEY_NUM&0xe0)==0xe0))&&key_up)
 189   1        {
 190   2              KEY_NUM|=0xE0;
 191   2              Delay(15);//去抖动 
 192   2                  
 193   2                KEY_NUM=P4;
 194   2            if(!((KEY_NUM&0xe0)==0xe0))
 195   2            {    
 196   3              
 197   3                key_up=0;
 198   3        
 199   3                 if((KEY_NUM&0x80)==0)return KEY1_PRES; 
 200   3            else if((KEY_NUM&0x40)==0)return KEY2_PRES;
 201   3            else if((KEY_NUM&0x20)==0)return KEY3_PRES;
 202   3            }
 203   2            
 204   2        }else if((KEY_NUM&0xe0)==0xe0)key_up=1;    
 205   1        return 0;// 无按键按下
 206   1      }
 207          
 208          
 209          void TEST_IMG(void)//自动播放画面的同时按键有效
 210          {
 211   1        unsigned char f,i,dly;
 212   1      dly=Auto_Delay/10;
 213   1          for(i=0;i<dly;i++)//此循环决定了延时长短
 214   1        {
 215   2          Delay(10);
 216   2          f=KEY_Scan(); 
 217   2          
 218   2            if(f==KEY2_PRES)
 219   2          {
 220   3              at_jump=0;
 221   3              FM_short();
 222   3              lcd_show(12);   
 223   3              PCH=12;
 224   3            i=dly;
 225   3          } 
 226   2          
 227   2          if(f==KEY3_PRES)
 228   2          {
 229   3              at_jump=0;
 230   3              FM_short();
 231   3              lcd_show(11);   
 232   3                PCH=11;
 233   3            i=dly;
 234   3          }
 235   2          
 236   2            if(f==KEY1_PRES)
 237   2            {       
 238   3              switch(POWER_VOL)
 239   3              {
 240   4                case 0: Power_off(); break;
C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 5   

 241   4                case 1: Power_on(); at_jump=1;  break;                        
 242   4                default: break;
 243   4              }
 244   3                    i=dly;
 245   3            }
 246   2        }
 247   1      
 248   1      
 249   1      }
 250          //-----------------------OLED----------------------------
 251          
 252          //初始化SSD1306             
 253          void OLED_Init(void)
 254          {
 255   1       
 256   1        OLED_RST_Set();
 257   1        delay_ms(100);
 258   1        OLED_RST_Clr();
 259   1        delay_ms(100);
 260   1        OLED_RST_Set(); 
 261   1      
 262   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 263   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 264   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 265   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 266   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 267   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 268   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 269   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 270   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 271   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 272   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 273   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 274   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 275   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 276   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 277   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 278   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 279   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 280   1        OLED_WR_Byte(0x12,OLED_CMD);
 281   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 282   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 283   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 284   1        OLED_WR_Byte(0x02,OLED_CMD);//
 285   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 286   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 287   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 288   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 289   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 290   1        
 291   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 292   1        OLED_Clear();
 293   1        OLED_Set_Pos(0,0);  
 294   1      }  
 295          
 296          
 297          void OLED_WR_Byte(u8 dat,u8 cmd)
 298          { 
 299   1        u8 i;       
 300   1        if(cmd)
 301   1          OLED_DC_Set();
 302   1        else 
C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 6   

 303   1          OLED_DC_Clr();      
 304   1        OLED_CS_Clr();
 305   1        for(i=0;i<8;i++)
 306   1        {       
 307   2          OLED_SCLK_Clr();
 308   2          if(dat&0x80)
 309   2            {
 310   3             OLED_SDIN_Set();
 311   3            }
 312   2      else
 313   2             OLED_SDIN_Clr();
 314   2              OLED_SCLK_Set();
 315   2          dat<<=1;   
 316   2        }             
 317   1        OLED_CS_Set();
 318   1        OLED_DC_Set();      
 319   1      } 
 320          
 321          
 322          
 323          
 324          
 325            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 326          { 
 327   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 328   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 329   1        OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
 330   1      }       
 331          //开启OLED显示    
 332          void OLED_Display_On(void)
 333          {
 334   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 335   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 336   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 337   1      }
 338          //关闭OLED显示     
 339          void OLED_Display_Off(void)
 340          {
 341   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 342   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 343   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 344   1      }            
 345          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 346          void OLED_Clear(void)  
 347          {  
 348   1        u8 i,n;       
 349   1        for(i=0;i<8;i++)  
 350   1        {  
 351   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 352   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 353   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 354   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 355   2        } //更新显示
 356   1      }
 357          
 358          //在指定位置显示一个字符,包括部分字符
 359          //x:0~127
 360          //y:0~63
 361          //mode:0,反白显示;1,正常显示         
 362          //size:选择字体 16/12 
 363          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 364          {       
C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 7   

 365   1        unsigned char c=0,i=0;  
 366   1          c=chr-' ';//得到偏移后的值      
 367   1          if(x>Max_Column-1){x=0;y=y+2;}
 368   1          if(SIZE ==16)
 369   1            {
 370   2            OLED_Set_Pos(x,y);  
 371   2            for(i=0;i<8;i++)
 372   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 373   2            OLED_Set_Pos(x,y+1);
 374   2            for(i=0;i<8;i++)
 375   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 376   2            }
 377   1            
 378   1      //      else {  
 379   1      //        OLED_Set_Pos(x,y+1);
 380   1      //        for(i=0;i<6;i++)
 381   1      //        OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 382   1      //        
 383   1      //      }
 384   1            
 385   1      }
 386          //m^n函数
 387          u32 oled_pow(u8 m,u8 n)
 388          {
 389   1        u32 result=1;  
 390   1        while(n--)result*=m;    
 391   1        return result;
 392   1      }         
 393          //显示2个数字
 394          //x,y :起点坐标  
 395          //len :数字的位数
 396          //size:字体大小
 397          //mode:模式 0,填充模式;1,叠加模式
 398          //num:数值(0~4294967295);       
 399          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 400          {           
 401   1        u8 t,temp;
 402   1        u8 enshow=0;               
 403   1        for(t=0;t<len;t++)
 404   1        {
 405   2          temp=(num/oled_pow(10,len-t-1))%10;
 406   2          if(enshow==0&&t<(len-1))
 407   2          {
 408   3            if(temp==0)
 409   3            {
 410   4              OLED_ShowChar(x+(size2/2)*t,y,' ');
 411   4              continue;
 412   4            }else enshow=1; 
 413   3             
 414   3          }
 415   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
 416   2        }
 417   1      } 
 418          //显示一个字符号串
 419          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 420          {
 421   1        unsigned char j=0;
 422   1        while (chr[j]!='\0')
 423   1        {   OLED_ShowChar(x,y,chr[j]);
 424   2            x+=8;
 425   2          if(x>120){x=0;y+=2;}
 426   2            j++;
C51 COMPILER V9.01   MAIN                                                                  09/19/2022 09:37:10 PAGE 8   

 427   2        }
 428   1      }
 429          //显示汉字
 430          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 431          {               
 432   1        u8 t,adder=0;
 433   1        OLED_Set_Pos(x,y);  
 434   1          for(t=0;t<16;t++)
 435   1          {
 436   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 437   2              adder+=1;
 438   2           }  
 439   1          OLED_Set_Pos(x,y+1);  
 440   1          for(t=0;t<16;t++)
 441   1            { 
 442   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 443   2              adder+=1;
 444   2            }         
 445   1      }
 446          
 447          
 448          
 449          
 450          
 451          
 452          
 453          
 454          
 455          
 456          
 457          
 458          //---------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1195    ----
   CONSTANT SIZE    =  54838    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
